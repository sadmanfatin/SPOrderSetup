package model.view;

import model.entity.SpDefaultLearningCurveEOImpl;

import oracle.jbo.Row;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun May 29 16:50:18 BDT 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SpDefaultLearningCurveVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DlcId {
            public Object get(SpDefaultLearningCurveVORowImpl obj) {
                return obj.getDlcId();
            }

            public void put(SpDefaultLearningCurveVORowImpl obj,
                            Object value) {
                obj.setDlcId((Number)value);
            }
        }
        ,
        DayNo {
            public Object get(SpDefaultLearningCurveVORowImpl obj) {
                return obj.getDayNo();
            }

            public void put(SpDefaultLearningCurveVORowImpl obj,
                            Object value) {
                obj.setDayNo((Number)value);
            }
        }
        ,
        LearningPercentage {
            public Object get(SpDefaultLearningCurveVORowImpl obj) {
                return obj.getLearningPercentage();
            }

            public void put(SpDefaultLearningCurveVORowImpl obj,
                            Object value) {
                obj.setLearningPercentage((Number)value);
            }
        }
        ,
        OrgId {
            public Object get(SpDefaultLearningCurveVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SpDefaultLearningCurveVORowImpl obj,
                            Object value) {
                obj.setOrgId((Number)value);
            }
        }
        ,
        ItemDescription {
            public Object get(SpDefaultLearningCurveVORowImpl obj) {
                return obj.getItemDescription();
            }

            public void put(SpDefaultLearningCurveVORowImpl obj,
                            Object value) {
                obj.setItemDescription((String)value);
            }
        }
        ,
        ItemId {
            public Object get(SpDefaultLearningCurveVORowImpl obj) {
                return obj.getItemId();
            }

            public void put(SpDefaultLearningCurveVORowImpl obj,
                            Object value) {
                obj.setItemId((Number)value);
            }
        }
        ,
        ItemDescriptionVO {
            public Object get(SpDefaultLearningCurveVORowImpl obj) {
                return obj.getItemDescriptionVO();
            }

            public void put(SpDefaultLearningCurveVORowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SpDefaultLearningCurveVORowImpl object);

        public abstract void put(SpDefaultLearningCurveVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DLCID = AttributesEnum.DlcId.index();
    public static final int DAYNO = AttributesEnum.DayNo.index();
    public static final int LEARNINGPERCENTAGE = AttributesEnum.LearningPercentage.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int ITEMDESCRIPTION = AttributesEnum.ItemDescription.index();
    public static final int ITEMID = AttributesEnum.ItemId.index();
    public static final int ITEMDESCRIPTIONVO = AttributesEnum.ItemDescriptionVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SpDefaultLearningCurveVORowImpl() {
    }

    /**
     * Gets SpDefaultLearningCurveEO entity object.
     * @return the SpDefaultLearningCurveEO
     */
    public SpDefaultLearningCurveEOImpl getSpDefaultLearningCurveEO() {
        return (SpDefaultLearningCurveEOImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for DLC_ID using the alias name DlcId.
     * @return the DLC_ID
     */
    public Number getDlcId() {
        return (Number) getAttributeInternal(DLCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DLC_ID using the alias name DlcId.
     * @param value value to set the DLC_ID
     */
    public void setDlcId(Number value) {
        setAttributeInternal(DLCID, value);
    }

    /**
     * Gets the attribute value for DAY_NO using the alias name DayNo.
     * @return the DAY_NO
     */
    public Number getDayNo() {
        return (Number) getAttributeInternal(DAYNO);
    }

    /**
     * Sets <code>value</code> as attribute value for DAY_NO using the alias name DayNo.
     * @param value value to set the DAY_NO
     */
    public void setDayNo(Number value) {
        setAttributeInternal(DAYNO, value);
    }

    /**
     * Gets the attribute value for LEARNING_PERCENTAGE using the alias name LearningPercentage.
     * @return the LEARNING_PERCENTAGE
     */
    public Number getLearningPercentage() {
        return (Number) getAttributeInternal(LEARNINGPERCENTAGE);
    }

    /**
     * Sets <code>value</code> as attribute value for LEARNING_PERCENTAGE using the alias name LearningPercentage.
     * @param value value to set the LEARNING_PERCENTAGE
     */
    public void setLearningPercentage(Number value) {
        setAttributeInternal(LEARNINGPERCENTAGE, value);
    }
   
    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public Number getOrgId() {
        return (Number) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(Number value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for ITEM_DESCRIPTION using the alias name ItemDescription.
     * @return the ITEM_DESCRIPTION
     */
    public String getItemDescription() {
        return (String) getAttributeInternal(ITEMDESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for ITEM_DESCRIPTION using the alias name ItemDescription.
     * @param value value to set the ITEM_DESCRIPTION
     */
    public void setItemDescription(String value) {
        setAttributeInternal(ITEMDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for ITEM_ID using the alias name ItemId.
     * @return the ITEM_ID
     */
    public Number getItemId() {
        return (Number) getAttributeInternal(ITEMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITEM_ID using the alias name ItemId.
     * @param value value to set the ITEM_ID
     */
    public void setItemId(Number value) {
        setAttributeInternal(ITEMID, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link ItemDescriptionVO.
     */
    public Row getItemDescriptionVO() {
        return (Row)getAttributeInternal(ITEMDESCRIPTIONVO);
    }

    /**
     * Sets the master-detail link ItemDescriptionVO between this object and <code>value</code>.
     */
    public void setItemDescriptionVO(Row value) {
        setAttributeInternal(ITEMDESCRIPTIONVO, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
