package model.view;

import model.entity.SpOrderLearningCurveEOImpl;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun May 22 11:07:18 BDT 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SpOrderLearningCurveVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        OlcId {
            public Object get(SpOrderLearningCurveVORowImpl obj) {
                return obj.getOlcId();
            }

            public void put(SpOrderLearningCurveVORowImpl obj, Object value) {
                obj.setOlcId((Number)value);
            }
        }
        ,
        OrderSetupId {
            public Object get(SpOrderLearningCurveVORowImpl obj) {
                return obj.getOrderSetupId();
            }

            public void put(SpOrderLearningCurveVORowImpl obj, Object value) {
                obj.setOrderSetupId((Number)value);
            }
        }
        ,
        DayNo {
            public Object get(SpOrderLearningCurveVORowImpl obj) {
                return obj.getDayNo();
            }

            public void put(SpOrderLearningCurveVORowImpl obj, Object value) {
                obj.setDayNo((Number)value);
            }
        }
        ,
        LearningPercentage {
            public Object get(SpOrderLearningCurveVORowImpl obj) {
                return obj.getLearningPercentage();
            }

            public void put(SpOrderLearningCurveVORowImpl obj, Object value) {
                obj.setLearningPercentage((Number)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(SpOrderLearningCurveVORowImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(SpOrderLearningCurveVORowImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(SpOrderLearningCurveVORowImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(SpOrderLearningCurveVORowImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
     
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SpOrderLearningCurveVORowImpl object);

        public abstract void put(SpOrderLearningCurveVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int OLCID = AttributesEnum.OlcId.index();
    public static final int ORDERSETUPID = AttributesEnum.OrderSetupId.index();
    public static final int DAYNO = AttributesEnum.DayNo.index();
    public static final int LEARNINGPERCENTAGE = AttributesEnum.LearningPercentage.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SpOrderLearningCurveVORowImpl() {
    }

    /**
     * Gets SpOrderLearningCurveEO entity object.
     * @return the SpOrderLearningCurveEO
     */
    public SpOrderLearningCurveEOImpl getSpOrderLearningCurveEO() {
        return (SpOrderLearningCurveEOImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for OLC_ID using the alias name OlcId.
     * @return the OLC_ID
     */
    public Number getOlcId() {
        return (Number) getAttributeInternal(OLCID);
    }

    /**
     * Sets <code>value</code> as attribute value for OLC_ID using the alias name OlcId.
     * @param value value to set the OLC_ID
     */
    public void setOlcId(Number value) {
        setAttributeInternal(OLCID, value);
    }

    /**
     * Gets the attribute value for ORDER_SETUP_ID using the alias name OrderSetupId.
     * @return the ORDER_SETUP_ID
     */
    public Number getOrderSetupId() {
        return (Number) getAttributeInternal(ORDERSETUPID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORDER_SETUP_ID using the alias name OrderSetupId.
     * @param value value to set the ORDER_SETUP_ID
     */
    public void setOrderSetupId(Number value) {
        setAttributeInternal(ORDERSETUPID, value);
    }

    /**
     * Gets the attribute value for DAY_NO using the alias name DayNo.
     * @return the DAY_NO
     */
    public Number getDayNo() {
        
       return (Number) getAttributeInternal(DAYNO);
    }

    /**
     * Sets <code>value</code> as attribute value for DAY_NO using the alias name DayNo.
     * @param value value to set the DAY_NO
     */
    public void setDayNo(Number value) {
        setAttributeInternal(DAYNO, value);
    
    }

    /**
     * Gets the attribute value for LEARNING_PERCENTAGE using the alias name LearningPercentage.
     * @return the LEARNING_PERCENTAGE
     */
    public Number getLearningPercentage() {
        return (Number) getAttributeInternal(LEARNINGPERCENTAGE);
    }

    /**
     * Sets <code>value</code> as attribute value for LEARNING_PERCENTAGE using the alias name LearningPercentage.
     * @param value value to set the LEARNING_PERCENTAGE
     */
    public void setLearningPercentage(Number value) {
        setAttributeInternal(LEARNINGPERCENTAGE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public Number getLastUpdatedBy() {
        return (Number) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @return the LAST_UPDATED_DATE
     */
    public Date getLastUpdatedDate() {
        return (Date) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @param value value to set the LAST_UPDATED_DATE
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }



    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
