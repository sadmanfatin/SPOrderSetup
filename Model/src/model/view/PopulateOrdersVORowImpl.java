package model.view;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun May 22 16:49:15 BDT 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PopulateOrdersVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        PocId {
            public Object get(PopulateOrdersVORowImpl obj) {
                return obj.getPocId();
            }

            public void put(PopulateOrdersVORowImpl obj, Object value) {
                obj.setPocId((Number)value);
            }
        }
        ,
        BpoId {
            public Object get(PopulateOrdersVORowImpl obj) {
                return obj.getBpoId();
            }

            public void put(PopulateOrdersVORowImpl obj, Object value) {
                obj.setBpoId((String)value);
            }
        }
        ,
        LcUnit {
            public Object get(PopulateOrdersVORowImpl obj) {
                return obj.getLcUnit();
            }

            public void put(PopulateOrdersVORowImpl obj, Object value) {
                obj.setLcUnit((Number)value);
            }
        }
        ,
        LcUnitName {
            public Object get(PopulateOrdersVORowImpl obj) {
                return obj.getLcUnitName();
            }

            public void put(PopulateOrdersVORowImpl obj, Object value) {
                obj.setLcUnitName((String)value);
            }
        }
        ,
        BuyerId {
            public Object get(PopulateOrdersVORowImpl obj) {
                return obj.getBuyerId();
            }

            public void put(PopulateOrdersVORowImpl obj, Object value) {
                obj.setBuyerId((Number)value);
            }
        }
        ,
        BuyerName {
            public Object get(PopulateOrdersVORowImpl obj) {
                return obj.getBuyerName();
            }

            public void put(PopulateOrdersVORowImpl obj, Object value) {
                obj.setBuyerName((String)value);
            }
        }
        ,
        Season {
            public Object get(PopulateOrdersVORowImpl obj) {
                return obj.getSeason();
            }

            public void put(PopulateOrdersVORowImpl obj, Object value) {
                obj.setSeason((String)value);
            }
        }
        ,
        Style {
            public Object get(PopulateOrdersVORowImpl obj) {
                return obj.getStyle();
            }

            public void put(PopulateOrdersVORowImpl obj, Object value) {
                obj.setStyle((String)value);
            }
        }
        ,
        Bpo {
            public Object get(PopulateOrdersVORowImpl obj) {
                return obj.getBpo();
            }

            public void put(PopulateOrdersVORowImpl obj, Object value) {
                obj.setBpo((String)value);
            }
        }
        ,
        OrderQty {
            public Object get(PopulateOrdersVORowImpl obj) {
                return obj.getOrderQty();
            }

            public void put(PopulateOrdersVORowImpl obj, Object value) {
                obj.setOrderQty((Number)value);
            }
        }
        ,
        Shipdate {
            public Object get(PopulateOrdersVORowImpl obj) {
                return obj.getShipdate();
            }

            public void put(PopulateOrdersVORowImpl obj, Object value) {
                obj.setShipdate((Date)value);
            }
        }
        ,
        Color {
            public Object get(PopulateOrdersVORowImpl obj) {
                return obj.getColor();
            }

            public void put(PopulateOrdersVORowImpl obj, Object value) {
                obj.setColor((String)value);
            }
        }
        ,
        WashName {
            public Object get(PopulateOrdersVORowImpl obj) {
                return obj.getWashName();
            }

            public void put(PopulateOrdersVORowImpl obj, Object value) {
                obj.setWashName((String)value);
            }
        }
        ,
        VersionDate {
            public Object get(PopulateOrdersVORowImpl obj) {
                return obj.getVersionDate();
            }

            public void put(PopulateOrdersVORowImpl obj, Object value) {
                obj.setVersionDate((Date)value);
            }
        }
        ,
        SelectOrder {
            public Object get(PopulateOrdersVORowImpl obj) {
                return obj.getSelectOrder();
            }

            public void put(PopulateOrdersVORowImpl obj, Object value) {
                obj.setSelectOrder((String)value);
            }
        }
        ,
        ProductionUnit {
            public Object get(PopulateOrdersVORowImpl obj) {
                return obj.getProductionUnit();
            }

            public void put(PopulateOrdersVORowImpl obj, Object value) {
                obj.setProductionUnit((Number)value);
            }
        }
        ,
        ProductionUnitName {
            public Object get(PopulateOrdersVORowImpl obj) {
                return obj.getProductionUnitName();
            }

            public void put(PopulateOrdersVORowImpl obj, Object value) {
                obj.setProductionUnitName((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(PopulateOrdersVORowImpl object);

        public abstract void put(PopulateOrdersVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int POCID = AttributesEnum.PocId.index();
    public static final int BPOID = AttributesEnum.BpoId.index();
    public static final int LCUNIT = AttributesEnum.LcUnit.index();
    public static final int LCUNITNAME = AttributesEnum.LcUnitName.index();
    public static final int BUYERID = AttributesEnum.BuyerId.index();
    public static final int BUYERNAME = AttributesEnum.BuyerName.index();
    public static final int SEASON = AttributesEnum.Season.index();
    public static final int STYLE = AttributesEnum.Style.index();
    public static final int BPO = AttributesEnum.Bpo.index();
    public static final int ORDERQTY = AttributesEnum.OrderQty.index();
    public static final int SHIPDATE = AttributesEnum.Shipdate.index();
    public static final int COLOR = AttributesEnum.Color.index();
    public static final int WASHNAME = AttributesEnum.WashName.index();
    public static final int VERSIONDATE = AttributesEnum.VersionDate.index();
    public static final int SELECTORDER = AttributesEnum.SelectOrder.index();
    public static final int PRODUCTIONUNIT = AttributesEnum.ProductionUnit.index();
    public static final int PRODUCTIONUNITNAME = AttributesEnum.ProductionUnitName.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PopulateOrdersVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute PocId.
     * @return the PocId
     */
    public Number getPocId() {
        return (Number) getAttributeInternal(POCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PocId.
     * @param value value to set the  PocId
     */
    public void setPocId(Number value) {
        setAttributeInternal(POCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BpoId.
     * @return the BpoId
     */
    public String getBpoId() {
        return (String) getAttributeInternal(BPOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BpoId.
     * @param value value to set the  BpoId
     */
    public void setBpoId(String value) {
        setAttributeInternal(BPOID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LcUnit.
     * @return the LcUnit
     */
    public Number getLcUnit() {
        return (Number) getAttributeInternal(LCUNIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LcUnit.
     * @param value value to set the  LcUnit
     */
    public void setLcUnit(Number value) {
        setAttributeInternal(LCUNIT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LcUnitName.
     * @return the LcUnitName
     */
    public String getLcUnitName() {
        return (String) getAttributeInternal(LCUNITNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LcUnitName.
     * @param value value to set the  LcUnitName
     */
    public void setLcUnitName(String value) {
        setAttributeInternal(LCUNITNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BuyerId.
     * @return the BuyerId
     */
    public Number getBuyerId() {
        return (Number) getAttributeInternal(BUYERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BuyerId.
     * @param value value to set the  BuyerId
     */
    public void setBuyerId(Number value) {
        setAttributeInternal(BUYERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BuyerName.
     * @return the BuyerName
     */
    public String getBuyerName() {
        return (String) getAttributeInternal(BUYERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BuyerName.
     * @param value value to set the  BuyerName
     */
    public void setBuyerName(String value) {
        setAttributeInternal(BUYERNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Season.
     * @return the Season
     */
    public String getSeason() {
        return (String) getAttributeInternal(SEASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Season.
     * @param value value to set the  Season
     */
    public void setSeason(String value) {
        setAttributeInternal(SEASON, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Style.
     * @return the Style
     */
    public String getStyle() {
        return (String) getAttributeInternal(STYLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Style.
     * @param value value to set the  Style
     */
    public void setStyle(String value) {
        setAttributeInternal(STYLE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Bpo.
     * @return the Bpo
     */
    public String getBpo() {
        return (String) getAttributeInternal(BPO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Bpo.
     * @param value value to set the  Bpo
     */
    public void setBpo(String value) {
        setAttributeInternal(BPO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrderQty.
     * @return the OrderQty
     */
    public Number getOrderQty() {
        return (Number) getAttributeInternal(ORDERQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrderQty.
     * @param value value to set the  OrderQty
     */
    public void setOrderQty(Number value) {
        setAttributeInternal(ORDERQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Shipdate.
     * @return the Shipdate
     */
    public Date getShipdate() {
        return (Date) getAttributeInternal(SHIPDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Shipdate.
     * @param value value to set the  Shipdate
     */
    public void setShipdate(Date value) {
        setAttributeInternal(SHIPDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Color.
     * @return the Color
     */
    public String getColor() {
        return (String) getAttributeInternal(COLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Color.
     * @param value value to set the  Color
     */
    public void setColor(String value) {
        setAttributeInternal(COLOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WashName.
     * @return the WashName
     */
    public String getWashName() {
        return (String) getAttributeInternal(WASHNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WashName.
     * @param value value to set the  WashName
     */
    public void setWashName(String value) {
        setAttributeInternal(WASHNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute VersionDate.
     * @return the VersionDate
     */
    public Date getVersionDate() {
        return (Date) getAttributeInternal(VERSIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute VersionDate.
     * @param value value to set the  VersionDate
     */
    public void setVersionDate(Date value) {
        setAttributeInternal(VERSIONDATE, value);
    }


    /**
     * Gets the attribute value for the calculated attribute SelectOrder.
     * @return the SelectOrder
     */
    public String getSelectOrder() {
        return (String) getAttributeInternal(SELECTORDER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SelectOrder.
     * @param value value to set the  SelectOrder
     */
    public void setSelectOrder(String value) {
        setAttributeInternal(SELECTORDER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProductionUnit.
     * @return the ProductionUnit
     */
    public Number getProductionUnit() {
        return (Number) getAttributeInternal(PRODUCTIONUNIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProductionUnit.
     * @param value value to set the  ProductionUnit
     */
    public void setProductionUnit(Number value) {
        setAttributeInternal(PRODUCTIONUNIT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProductionUnitName.
     * @return the ProductionUnitName
     */
    public String getProductionUnitName() {
        return (String) getAttributeInternal(PRODUCTIONUNITNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProductionUnitName.
     * @param value value to set the  ProductionUnitName
     */
    public void setProductionUnitName(String value) {
        setAttributeInternal(PRODUCTIONUNITNAME, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
